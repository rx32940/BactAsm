import os
configfile: "config/config.yaml"

SAMPLES = config["samples"]

THREADS = config["threads_num"]

output_dir_general = config["output_dir"]
subworkflowdir = config["subworkflow"]

output_dir = os.path.join(config["output_dir"], "raw/")
output_dir_trim = os.path.join(config["output_dir"],"trim/")
output_dir_asm = os.path.join(config["output_dir"], "asm/")
output_dir_log = os.path.join(config["output_dir"], "log/")
output_dir_prokka = os.path.join(config["output_dir"], "asm_anot/")
output_dir_map = os.path.join(config["output_dir"], "snps/")

reference = config["reference"]


include: subworkflowdir + "raw.smk"
include: subworkflowdir + "trim.smk"
include: subworkflowdir + "asm.smk"
include: subworkflowdir + "annotate.smk"
include: subworkflowdir + "snp.smk"

rule all:
    input: 
        # QC before trimming
        output_dir + "multiqc_report.html",
        # QC after trimming
        output_dir_trim + "multiqc_report.html",
        # check de novo asm qualities
        output_dir_asm + "multiqc_quast.html",
        # annotate de novo asm
        expand([os.path.join(output_dir_prokka ,"{sample}", "{sample}.gff")], sample= SAMPLES), 
        # map if reference exist
        map = os.path.join(output_dir_map , "coreSNPs","clean.full.aln") if reference else output_dir_map + "no_reference.log"

